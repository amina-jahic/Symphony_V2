// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Symphony_V2.Infrastructure;

namespace Symphony_V2.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Symphony_V2.Infrastructure.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuestionValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            QuestionValue = "I feel that I am a person of worth, at least on an equal plane with others."
                        },
                        new
                        {
                            Id = 2,
                            QuestionValue = "I feel that I have a number of good qualities."
                        },
                        new
                        {
                            Id = 3,
                            QuestionValue = "All in all, I am inclined to feel that I am a failure."
                        },
                        new
                        {
                            Id = 4,
                            QuestionValue = "I am able to do things as well as most other people."
                        },
                        new
                        {
                            Id = 5,
                            QuestionValue = "I feel I do not have much to be proud of."
                        },
                        new
                        {
                            Id = 6,
                            QuestionValue = "I take a positive attitude toward myself."
                        },
                        new
                        {
                            Id = 7,
                            QuestionValue = "On the whole, I am satisfied with myself."
                        },
                        new
                        {
                            Id = 8,
                            QuestionValue = "I wish I could have more respect for myself."
                        },
                        new
                        {
                            Id = 9,
                            QuestionValue = "I certainly feel useless at times."
                        },
                        new
                        {
                            Id = 10,
                            QuestionValue = "At times I think I am no good at all."
                        });
                });

            modelBuilder.Entity("Symphony_V2.Infrastructure.Models.QuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerValue")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionnaireId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("QuestionAnswers");
                });

            modelBuilder.Entity("Symphony_V2.Infrastructure.Models.Questionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Pin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("Symphony_V2.Infrastructure.Models.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuestionnaireId")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("QuestionnaireId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Symphony_V2.Infrastructure.Models.QuestionAnswer", b =>
                {
                    b.HasOne("Symphony_V2.Infrastructure.Models.Questionnaire", "Questionnaire")
                        .WithMany("QuestionAnswers")
                        .HasForeignKey("QuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("Symphony_V2.Infrastructure.Models.User", b =>
                {
                    b.HasOne("Symphony_V2.Infrastructure.Models.Questionnaire", "Questionnaire")
                        .WithMany()
                        .HasForeignKey("QuestionnaireId");

                    b.Navigation("Questionnaire");
                });

            modelBuilder.Entity("Symphony_V2.Infrastructure.Models.Questionnaire", b =>
                {
                    b.Navigation("QuestionAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
